local Translations = {
   --["Scripts"] = "脚本",
    ["Main"] = "主要",
    ["This tab is empty"] = "此选项卡为空",
    ["RINGTA SCRIPTS"] = "RINGTA脚本",
    ["ringta"] = "本熊汉化",
    ["Other"] = "其他",
    ["Towns"] = "城镇",
    ["OTHER TP"] = "其他传送",
    ["Open RINGTA SCRIPTS"] = "打开RINGTA脚本",
    ["Features"] = "功能",
    ["Transformation"] = "变型",
    ["Bring Items"] = "带来物品",
    ["CREDITS"] = "赞誉",
    ["MADE BY RINGTA"] = "由RINGTA制作",
    ["JOIN DISCORD SERVER RINGTA"] = "加入discord服务器RINGTA",
    ["Credits to Chonky And KingKM(The other 2 devs)"] = "感谢 Chonky 和 KingKM（另外 2 位开发者）",
    ["Script Runtime"] = "脚本运行时间",
    ["END SCRIRT EARLY"] = "提前结束脚本",
    ["END BRING ALL ITEMS EARLY IF NEEDED"] = "如果需要的话请尽早带上所有物品",
    ["Select How Many Items To Bring"] = "选择带来数量",
    ["Collect Items When Near"] = "靠近时收集物品",
    ["Auto Get Electro Gun"] = "自动获取电击枪",
    ["Fly Speed"] = "飞行速度",
    ["Fly"] = "飞行",
    ["Fly Off"] = "关闭飞行",
    ["Noclip"] = "穿墙",
    ["Anti-Void"] = "反虚空",
    ["Fullbright"] = "全亮",
    ["AUTO HIT OP"] = "自动命中操作",
    ["TP to Train"] = "传送到火车",
    ["TP to Sterling"] = "传送到斯特林",
    ["TP to TeslaLab"] = "传送到特斯拉工厂",
    ["TP to Castle"] = "传送到城堡",
    ["TP StillWater Prision"] = "传送到静水监狱",
    ["Tp To Fort"] = "传送到堡垒",
    ["TP to Unicorn"] = "传送到独角兽",
    ["TP to Barn"] = "传送到谷仓",
    ["TP to Outlaw Camp"] = "传送到强盗营地",
    ["TP to End"] = "传送到终点",
    ["TP to Bank"] = "传送到银行",
    ["Gun Aura (Kill Mobs)"] = "枪光环（杀死怪物）",
    ["Train Kill Aura"] = "火车杀戮光环",
    ["Town 1"] = "镇 1",
    ["Town 2"] = "镇 2",
    ["Town 3"] = "镇 3",
    ["Town 4"] = "镇 4",
    ["Town 5"] = "镇 5",
    ["Town 6"] = "镇 6",
    ["Tp To Firework Gun"] = "传送到烟花枪",
    ["Tp Firework Gun Ammo"] = "传送到烟花枪弹药",
    ["Tp To Rocket Launcher"] = "传送到火箭发射器",
    ["Tp to War Horse"] = "传送到战马",
    ["Tp to Death Horse"] = "传送到死亡之马",
    ["Tp to Famine Horse"] = "传送到饥荒马",
    ["Tp to Pestilence Horse"] = "传送到瘟疫马",
    ["TP Jade Sword NEED SEAT"] = "传送到玉剑 需要座位",
    ["Tp To End NEED SEAT"] = "传送到终点 需要座位",
    ["Tp Trading Post NEED SEAT"] = "传送交易站 需要座位",
    ["Auto Banjo"] = "自动班卓琴",
    ["AutoHeal Threshold"] = "自动修复阈值",
    ["Auto Heal (Bandage)"] = "自动治疗（绷带）",
    ["Auto Heal (Snake Oil)"] = "自动治疗（蛇油）",
    ["Inf Sprint"] = "步兵冲刺",
    ["Infinite Sprint"] = "无限冲刺",
    ["Auto Sprint When Stamina"] = "耐力值不足时自动冲刺",
    ["Auto collect items"] = "自动收集物品",
    ["Select guns to auto-collect"] = "选择要自动收集的枪支",
    ["Sawed-Off Shotgun"] = "短管霰弹枪",
    ["Bolt Action Rifle"] = "栓动步枪",
    ["ElectroCutioner"] = "电击刀",
    ["毛瑟C96"] = "Mauser C96",
    ["Navy Revolver"] = "海军左轮手枪",
    ["Rifle"] = "步枪",
    ["Shotgun"] = "霰弹枪",
    ["Revolver"] = "左轮手枪",
    ["Select melee items to auto-collect"] = "选择要自动收集的近战物品",
    ["Select ammo types to auto-collect"] = "选择要自动收集的弹药类型",
    ["Autocollect Start"] = "自动收集开始",
    ["Instant Proximity"] = "即时接近",
    ["Tomahawk"] = "战斧",
    ["Pickaxe"] = "镐",
    ["Vampire Knife"] = "吸血鬼刀",
    ["Shovel"] = "铲",
    ["Jade Sword"] = "玉剑",
    ["Excalibur"] = "神剑",
    ["Cavalry Sword"] = "骑兵剑",
    ["Jade Sword"] = "玉剑",
    ["RifleAmmo"] = "步枪弹药",
    ["Rifle Ammo"] = "步枪弹药",
    ["Shotgun Shells"] = "霰弹枪弹壳",
    ["ShotgunShells"] = "霰弹枪弹壳",
    ["Revolver Ammo"] = "左轮手枪弹药",
    ["RevolverAmmo"] = "左轮手枪弹药",
    ["NOTE: YOU NEED TO HOLD OUT VAMPIRE KNIFE TO MAKE THE MORPHS WORK"] = "注意：你需要拿出吸血鬼刀才能使变形起作用",
    ["credit to cursed_pink_sheep"] = "感谢 cursed_pink_sheep",
    ["Eggstravaganza Morph"] = "盛大彩蛋变形",
    ["Goliath Morph"] = "巨人变形",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
    [""] = "",
}

local function translateText(text)
    if not text or type(text) ~= "string" then return text end
    
    if Translations[text] then
        return Translations[text]
    end
    
    for en, cn in pairs(Translations) do
        if text:find(en) then
            return text:gsub(en, cn)
        end
    end
    
    return text
end

local function setupTranslationEngine()
    local success, err = pcall(function()
        local oldIndex = getrawmetatable(game).__newindex
        setreadonly(getrawmetatable(game), false)
        
        getrawmetatable(game).__newindex = newcclosure(function(t, k, v)
            if (t:IsA("TextLabel") or t:IsA("TextButton") or t:IsA("TextBox")) and k == "Text" then
                v = translateText(tostring(v))
            end
            return oldIndex(t, k, v)
        end)
        
        setreadonly(getrawmetatable(game), true)
    end)
    
    if not success then
        warn("元表劫持失败:", err)
       
        local translated = {}
        local function scanAndTranslate()
            for _, gui in ipairs(game:GetService("CoreGui"):GetDescendants()) do
                if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                    pcall(function()
                        local text = gui.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                gui.Text = translatedText
                                translated[gui] = true
                            end
                        end
                    end)
                end
            end
            
            local player = game:GetService("Players").LocalPlayer
            if player and player:FindFirstChild("PlayerGui") then
                for _, gui in ipairs(player.PlayerGui:GetDescendants()) do
                    if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                        pcall(function()
                            local text = gui.Text
                            if text and text ~= "" then
                                local translatedText = translateText(text)
                                if translatedText ~= text then
                                    gui.Text = translatedText
                                    translated[gui] = true
                                end
                            end
                        end)
                    end
                end
            end
        end
        
        local function setupDescendantListener(parent)
            parent.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("TextLabel") or descendant:IsA("TextButton") or descendant:IsA("TextBox") then
                    task.wait(0.1)
                    pcall(function()
                        local text = descendant.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                descendant.Text = translatedText
                            end
                        end
                    end)
                end
            end)
        end
        
        pcall(setupDescendantListener, game:GetService("CoreGui"))
        local player = game:GetService("Players").LocalPlayer
        if player and player:FindFirstChild("PlayerGui") then
            pcall(setupDescendantListener, player.PlayerGui)
        end
        
        while true do
            scanAndTranslate()
            task.wait(3)
        end
    end
end

task.wait(2)

setupTranslationEngine()

local success, err = pcall(function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/wefwef127382/DEADRAILS.github.io/refs/heads/main/mainringta.lua"))()

end)

if not success then
    warn("加载失败:", err)
end
